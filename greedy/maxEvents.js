/**
 * 能参加的最大会议数
 
 输入：events = [[1,2],[2,3],[3,4]]
 输出：3
 解释：你可以参加所有的三个会议。
 安排会议的一种方案如上图。
 第 1 天参加第一个会议。
 第 2 天参加第二个会议。
 第 3 天参加第三个会议。
 示例 2：
 
 输入：events= [[1,2],[2,3],[3,4],[1,2]]
 输出：4
 示例 3：
 
 输入：events = [[1,4],[4,4],[2,2],[3,4],[1,1]]
 输出：4
 示例 4：
 
 输入：events = [[1,100000]]
 输出：1
 示例 5：
 
 输入：events = [[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],[1,7]]
 输出：7
 
 * 思路：贪心算法
 * 1. 先按照最后一天排好序
 * 2. 选择最早的一天来进行开会，如果前面已经被占用的话，选后一天，直到没得选为止
 */
var maxEvents = function(events) {
	events.sort((a, b) => a[1] - b[1])
	let set = new Set()
	for (let i = 0; i < events.length; i++) {
		for (let j = events[i][0]; j <= events[i][1]; j++) {
			if (!set.has(j)) {
				set.add(j)
				break
			}
		}
	}
	return set.size
};
